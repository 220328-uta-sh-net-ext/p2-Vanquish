name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  WORKING_DIRECTORY: Pokemon_Vanquish_Proj
jobs:

  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ${{env.WORKING_DIRECTORY}}
    - name: Build
      run: dotnet build --no-restore ${{env.WORKING_DIRECTORY}}
    - name: Test
      run: dotnet test --no-build --verbosity normal ${{env.WORKING_DIRECTORY}}
      
  sonar-build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"sletts_p2-Vanquish-Main" /o:"sletts" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build ${{env.WORKING_DIRECTORY}}
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  docker-image-run:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v2.0.0
    - name: Docker Login
      uses: docker/login-action@v2.0.0
      with:
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_PASSWORD}}
    - name: Build and push Docker images
      uses: docker/build-push-action@v3.0.0
      with:
        file: ${{env.WORKING_DIRECTORY}}/Dockerfile
        push: true
        tags: index.docker.io/${{secrets.DOCKER_USERNAME}}/pokemonvanquishproj:${{github.sha}}
        
  azure-deploy:
    runs-on: ubuntu-latest
    needs: docker-image-run
    steps:
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: Vanquish-P2
        publish-profile: $${{secrets.AZURE_PUBLISH}}
        images: ${{secrets.DOCKER_USERNAME}}/pokemonvanquishproj:${{github.sha}}

